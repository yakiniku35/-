### **成員 1：遊戲初始化與基礎設置**
**負責範圍：**
1. 完成 **todo1: 初始化與全域配置** 的所有項目。
2. 檢查視窗正常打開，確保常數和設定無誤。
3. 設置 `pygame` 的事件（例如：目標生成的時間間隔 `TARGET_EVENT`）。

**成果：**
- 完成基本遊戲框架，讓其他成員能基於此工作。
- 確保畫面背景顯示正確，遊戲參數易於調整。

---

### **成員 2：目標類別的設計** 邱彥嘉
**負責範圍：**
1. 完成 **todo2: 撰寫目標類別**。
   - 實現 `Target` 類別的初始化、大小更新（增長與縮小）、目標繪製以及碰撞檢測功能。
2. 測試目標生成與縮小功能，確保無錯誤。

**成果：**
- 完成可用的 `Target` 類別，並確保目標顯示正常且會縮小消失。
- 測試目標碰撞邏輯，確認準確偵測滑鼠點擊。

---

### **成員 3：遊戲畫面的繪製**
**負責範圍：**
1. 完成 **todo3: 畫面繪製相關函式**。
   - 設計背景與目標繪製函式（`draw()`）。
   - 設計頂部資訊欄顯示函式（`draw_top_bar()`），顯示遊戲時間、得分和生命值。
   - 撰寫時間格式化函式 `format_time()`。
2. 測試畫面繪製是否正確，資訊欄是否更新。

**成果：**
- 畫面可以清晰顯示目標和頂部資訊欄，並隨著遊戲進行即時更新。
- 確保畫面整潔、不會因目標數量增加而卡頓。

---

### **成員 4：遊戲邏輯與結束畫面**
**負責範圍：**
1. 完成 **todo4: 撰寫遊戲邏輯** 和 **todo5: 撰寫結束畫面**。
   - 撰寫目標生成邏輯與滑鼠點擊處理。
   - 檢查目標消失與生命值扣減機制。
   - 實現結束畫面（顯示準確率、擊中次數等）。
2. 撰寫主程式 `main()`，整合所有功能。

**成果：**
- 遊戲邏輯完整，結束條件正確運行。
- 玩家生命歸零後可正常顯示結束畫面並退出程式。

---

### **最後的整合與測試**
1. **由全體成員協作完成**
   - 將所有模組整合到 `main()`。
   - 每人測試自己的部分，檢查整體是否運行流暢。
   - 修復任何整合後出現的錯誤。

---
